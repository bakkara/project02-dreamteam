{"mappings":"ACQiB,CAAA,CAAC,EAAO,KACrB,IAAM,EAAmB,EAAM,SAAA,CAAU,AAAA,GAAQ,EAAK,OAAtD,EACM,EAAO,CAAC;;;gBAGF,EAAE,CAAK,CAAC,EAAE,CAAC,OAAA,CAAU,CAAC;;gBAEtB,CAAC,CAAG,CAAC;6BACQ,EAAE,CAAK,CAAC,EAAmB,EAAE,CAAC,GAAA,CAAI;gBAC/C,CAAC,CAAC;;YAEN,EAAE,EAAM,GAAA,CAAI,CAAC,EAAM,IAAU,CAAC;mBACvB,EAAE,EAAK,OAAA,CAAU,mBAAqB,GAAG;oBACxC,EAAE,EAAK,OAAA,CAAU,CAAC;8BACR,EAAE,EAAQ,EAAE;oBACtB,CAAC,CAAG,CAAC;iCACQ,EAAE,EAAK,GAAA,CAAI,EAAE,EAAE,EAAQ,EAAE;oBACtC,CAAC,CAAC;;YAEV,CAAC,EAAE,IAAA,CAAK,IAAI;;gBAER,EAAE,CAAK,CAAC,EAAM,MAAA,CAAS,EAAE,CAAC,OAAA,CAAU,CAAC;;gBAErC,CAAC,CAAG,CAAC;6BACQ,EAAE,CAAK,CAAC,EAAmB,EAAE,CAAC,GAAA,CAAI;gBAC/C,CAAC,CAAC;;;IAGd,CAAC,AAED,CAAA,SAAS,aAAA,CAAc,GAAU,SAAA,CAAY,CACjD,CAAA,EAvCc,CACV,CAAE,IAAK,QAAS,EAChB,CAAE,IAAK,QAAS,EAChB,CAAE,IAAK,SAAU,QAAS,CAAA,CAAK,EAC/B,CAAE,IAAK,QAAS,EAChB,CAAE,IAAK,QAAS,EACnB,CA6Ee","sources":["<anon>","src/js/pagination.js"],"sourcesContent":["const pages = [\n    {\n        url: \"/page1\"\n    },\n    {\n        url: \"/page2\"\n    },\n    {\n        url: \"/page3\",\n        current: true\n    },\n    {\n        url: \"/page4\"\n    },\n    {\n        url: \"/page5\"\n    }\n];\nconst paginate = (pages, selector)=>{\n    const currentPageIndex = pages.findIndex((page)=>page.current);\n    const html = `\n        <ul class=\"pagination-list\">\n            <li class=\"previous\">\n                ${pages[0].current ? `\n                    <span>‹</span>\n                ` : `\n                    <a href=\"${pages[currentPageIndex - 1].url}\">‹</a>\n                `}\n            </li>\n            ${pages.map((item, index)=>`\n                <li${item.current ? ' class=\"current\"' : \"\"}>\n                    ${item.current ? `\n                        <span>${index + 1}</span>\n                    ` : `\n                        <a href=\"${item.url}\">${index + 1}</a>\n                    `}\n                </li> \n            `).join(\"\")}\n            <li class=\"next\">\n                ${pages[pages.length - 1].current ? `\n                    <span>›</span>\n                ` : `\n                    <a href=\"${pages[currentPageIndex + 1].url}\">›</a>\n                `}\n            </li>\n        </ul>\n    `;\n    document.querySelector(selector).innerHTML = html;\n};\nconst paginateWithOptions = (pages, selector, options)=>{\n    const { showPreviousAndNext } = options;\n    const currentPageIndex = pages.findIndex((page)=>page.current);\n    const html = `\n        <ul class=\"pagination-list\">\n            ${showPreviousAndNext ? `\n                <li class=\"previous\">\n                    ${pages[0].current ? `\n                        <span>‹</span>\n                    ` : `\n                        <a href=\"${pages[currentPageIndex - 1].url}\">‹</a>\n                    `}\n                </li>\n            ` : \"\"}\n            ${pages.map((item, index)=>`\n                <li${item.current ? ' class=\"current\"' : \"\"}>\n                    ${item.current ? `\n                        <span>${index + 1}</span>\n                    ` : `\n                        <a href=\"${item.url}\">${index + 1}</a>\n                    `}\n                </li> \n            `).join(\"\")}\n            ${showPreviousAndNext ? `\n                <li class=\"next\">\n                    ${pages[pages.length - 1].current ? `\n                        <span>›</span>\n                    ` : `\n                        <a href=\"${pages[currentPageIndex + 1].url}\">›</a>\n                    `}\n                </li>\n            ` : \"\"}\n        </ul>\n    `;\n    document.querySelector(selector).innerHTML = html;\n};\npaginate(pages, \".pagination\") // paginateWithOptions(pages, '.pagination', {\n //     showPreviousAndNext: false\n // })\n;\n\n//# sourceMappingURL=shopping-list.ccc7a9b3.js.map\n","const pages = [\n    { url: '/page1' },\n    { url: '/page2' },\n    { url: '/page3', current: true },\n    { url: '/page4' },\n    { url: '/page5' },\n]\n\nconst paginate = (pages, selector) => {\n    const currentPageIndex = pages.findIndex(page => page.current)\n    const html = `\n        <ul class=\"pagination-list\">\n            <li class=\"previous\">\n                ${pages[0].current ? `\n                    <span>‹</span>\n                ` : `\n                    <a href=\"${pages[currentPageIndex - 1].url}\">‹</a>\n                `}\n            </li>\n            ${pages.map((item, index) => `\n                <li${item.current ? ' class=\"current\"' : ''}>\n                    ${item.current ? `\n                        <span>${index + 1}</span>\n                    ` : `\n                        <a href=\"${item.url}\">${index + 1}</a>\n                    `}\n                </li> \n            `).join('')}\n            <li class=\"next\">\n                ${pages[pages.length - 1].current ? `\n                    <span>›</span>\n                ` : `\n                    <a href=\"${pages[currentPageIndex + 1].url}\">›</a>\n                `}\n            </li>\n        </ul>\n    `\n\n    document.querySelector(selector).innerHTML = html\n}\n\nconst paginateWithOptions = (pages, selector, options) => {\n    const {\n        showPreviousAndNext\n    } = options\n\n    const currentPageIndex = pages.findIndex(page => page.current)\n    const html = `\n        <ul class=\"pagination-list\">\n            ${showPreviousAndNext ? `\n                <li class=\"previous\">\n                    ${pages[0].current ? `\n                        <span>‹</span>\n                    ` : `\n                        <a href=\"${pages[currentPageIndex - 1].url}\">‹</a>\n                    `}\n                </li>\n            ` : ''}\n            ${pages.map((item, index) => `\n                <li${item.current ? ' class=\"current\"' : ''}>\n                    ${item.current ? `\n                        <span>${index + 1}</span>\n                    ` : `\n                        <a href=\"${item.url}\">${index + 1}</a>\n                    `}\n                </li> \n            `).join('')}\n            ${showPreviousAndNext ? `\n                <li class=\"next\">\n                    ${pages[pages.length - 1].current ? `\n                        <span>›</span>\n                    ` : `\n                        <a href=\"${pages[currentPageIndex + 1].url}\">›</a>\n                    `}\n                </li>\n            ` : ''}\n        </ul>\n    `\n\n    document.querySelector(selector).innerHTML = html\n}\n\n\npaginate(pages, '.pagination')\n// paginateWithOptions(pages, '.pagination', {\n//     showPreviousAndNext: false\n// })"],"names":["pages","selector","currentPageIndex","findIndex","page","current","html","url","map","item","index","join","length","document","querySelector","innerHTML"],"version":3,"file":"shopping-list.ccc7a9b3.js.map"}